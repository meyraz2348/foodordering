{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meyra\\\\Desktop\\\\REACT\\\\react-complete\\\\Food ordering\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from './cart-context';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalamount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updateTotalAmount = state.totalamount + action.item.price * action.item.amount;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispactCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispactCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispactCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalamount: cartState.totalamount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"QDbTzmF4fZNeNW7fnJYT4ZL/ORw=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/meyra/Desktop/REACT/react-complete/Food ordering/01-starting-project/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalamount","cartReducer","state","action","type","updatedItems","concat","item","updateTotalAmount","price","amount","CartProvider","props","cartState","dispactCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,iBAAiB,GACrBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MADtD;AAED;;AACD,SAAOZ,gBAAP;AACD,CAPD;;AAQA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,iBAAZ,IAAiCjB,UAAU,CAC/CI,WAD+C,EAE/CH,gBAF+C,CAAjD;;AAIA,QAAMiB,oBAAoB,GAAIR,IAAD,IAAU;AACrCO,IAAAA,iBAAiB,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAjB;AACD,GAFD;;AAGA,QAAMS,yBAAyB,GAAIC,EAAD,IAAQ;AACxCH,IAAAA,iBAAiB,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBa,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAjB;AACD,GAFD;;AAGA,QAAMC,WAAW,GAAG;AAClBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADC;AAElBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFL;AAGlBmB,IAAAA,OAAO,EAAEJ,oBAHS;AAIlBK,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBD;;GAAMV,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import CartContext from './cart-context'\r\nimport { useReducer } from 'react'\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalamount: 0,\r\n}\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    const updatedItems = state.items.concat(action.item)\r\n    const updateTotalAmount =\r\n      state.totalamount + action.item.price * action.item.amount\r\n  }\r\n  return defaultCartState\r\n}\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispactCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  )\r\n  const addItemToCartHandler = (item) => {\r\n    dispactCartAction({ type: 'ADD', item: item })\r\n  }\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispactCartAction({ type: 'REMOVE', id: id })\r\n  }\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalamount: cartState.totalamount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  }\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\nexport default CartProvider\r\n"]},"metadata":{},"sourceType":"module"}